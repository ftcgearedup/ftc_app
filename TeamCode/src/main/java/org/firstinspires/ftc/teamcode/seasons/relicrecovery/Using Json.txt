In order to use Json files in FTC, you have to follow these steps.

1: Copy this code to the start of your TeleOp or Autonomous program:

*************************************************

JsonParser parser = new JsonParser();

            Object obj;
            try {
                //get file in folder
                obj = parser.parse(new FileReader("/storage/emulated/0/FIRST/Testing.json"));
                telemetry.update();
                JsonObject jsonObject = (JsonObject) obj;

                // add data you want to pull from json file here
                String parameter = jsonObject.get("DATA NAME HERE").toString();
                String otherParameter = jsonObject.get("DATA NAME HERE").toString();

                // this prints the json data pulled to make sure it got it right.
                telemetry.addData("DATA NAME HERE", parameter);
                telemetry.addData("OTHER DATA NAME HERE", otherParameter);
                telemetry.update();

            } catch (FileNotFoundException e) {
                telemetry.addData("Error Report", e.getMessage());
                telemetry.addData("Exception", "FileNotFound");
                telemetry.addData("Cause", e.getCause());
                telemetry.addData("e.toString()", e.toString());
            }catch (ClassCastException e) {
                telemetry.addData("Error Report", e.getMessage());
                telemetry.addData("Exception", "ClassCast");
                telemetry.addData("Cause", e.getCause());
                telemetry.addData("e.toString()", e.toString());
            }

*************************************************

2: Create a Json file and add the data that you want into it. For this example, we wil use this teams
name and team number.

*************************************************

{
  "name": "Geared Up",
  "team": 6347
}

*************************************************

3: In your Program, change this segment to match your data in your Json file. Feel free to add
or remove data pulls to match what you want to retrieve.
*************************************************

// add data you want to pull from json file here
                String name = jsonObject.get("name").toString();
                String number = jsonObject.get("team").toString();

*************************************************

4: If you want, change the telemetry messages below that segment of code to make sure that it
worked.

*************************************************

// this prints the json data pulled to make sure it got it right.
                telemetry.addData("Team Name", name);
                telemetry.addData("Team Number", number);
                telemetry.update();

*************************************************

5: When you are done with the Json file, plug your Robot Controller phone into your computer that
you're programming on. Swipe down from the top and press the button that says "USB for..." Change
the option to "File transfers" and go back to the main screen.

6: In your Program, change the end of this segment to match up with the name of your JSON file.
THIS PART IS CASE SENSITIVE, SO BE CAREFUL!

*************************************************

obj = parser.parse(new FileReader("/storage/emulated/0/FIRST/CHANGE THIS PART.json"));

*************************************************

7: On your computer, copy your JSON file from its directory to your Desktop. This is just to make
it easier for the next step.

8: Open a File Explorer window and hit the computer button on the side. Find a picture that says
something like "Portable Media Player" below it. Open that up and open the Internal Storage folder.

9: Find a folder called "FIRST" and open it. Drag your JSON file into that folder.

10: Open the Settings app on your Robot Controller Phone.
Scroll down to the "Storage and USB" setting and open that.

11: Press the Internal Storage and scroll to the bottom to find the Explore button.
This is a file browser, and we're gonna use it to ensure that the file is there.
Find that FIRST folder and tap that. Scroll around and try and find your file. If it's there,
you're ready for the next part.

12: Push your code to your RC phone and test your program.